openapi: 3.0.0
paths:
  '/api/admin/candidates/${id}':
    delete:
      tags:
        - ADMIN
      summary: 'Удалить студента'
      operationId: 1159a87fae094064ad7fdc67e8104494
      parameters:
        -
          name: id
          in: path
          description: 'ID студента'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Студент удален'
  /api/admin/candidates:
    post:
      tags:
        - ADMIN
      summary: 'Создание студента'
      operationId: 3b17c617fad2984d0721794131f3cea3
      requestBody:
        description: 'Параметры для создания студента'
        required: true
        content:
          application/json:
            schema:
              properties:
                fio:
                  type: string
                about:
                  type: string
                email:
                  type: string
                numz:
                  type: integer
                phone:
                  type: string
                course:
                  type: integer
                training_group:
                  type: string
                can_send_participations:
                  type: boolean
                skill_ids:
                  type: array
                  items: { type: integer }
              type: object
      responses:
        '200':
          description: 'Информация о студенте создана'
    patch:
      tags:
        - ADMIN
      summary: 'Обновить информацию о студенте @TODO BODY'
      operationId: 2863c09aad77ed86e41eb20ea249ce4f
      parameters:
        -
          name: id
          in: path
          description: 'ID студента'
          required: true
          schema:
            type: integer
      requestBody:
        description: 'Параметры для обновления студента'
        required: true
        content:
          application/json:
            schema:
              properties:
                fio:
                  type: string
                about:
                  type: string
                email:
                  type: string
                numz:
                  type: integer
                phone:
                  type: string
                course:
                  type: integer
                training_group:
                  type: string
                skill_ids:
                  type: array
                  items: { type: integer }
              type: object
      responses:
        '200':
          description: 'Информация о студенте обновлена'
        '404':
          description: 'Студент не найден'
  '/api/admin/harvestSettings/${id}':
    delete:
      tags:
        - ADMIN
      summary: 'Удалить настройку сбора заявок'
      operationId: 6ac4e41fa20fe89547be924f5f423f5e
      parameters:
        -
          name: id
          in: path
          description: 'ID настройки'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Тип проекта удален'
        '404':
          description: 'Тип проекта не найден'
    patch:
      tags:
        - ADMIN
      summary: 'Обновить настройку сбора заявок'
      operationId: 77a5d40ce3ff5216cfef52aee1d8bd5a
      parameters:
        -
          name: id
          in: path
          description: 'ID настройки'
          required: true
          schema:
            type: integer
      requestBody:
        description: 'Параметры для обновления настройки'
        required: true
        content:
          application/json:
            schema:
              properties:
                type:
                  type: string
              type: object
      responses:
        '200':
          description: 'Настройка изменена'
        '404':
          description: 'Настройка не найдена'
  /api/admin/harvestSettings:
    post:
      tags:
        - ADMIN
      summary: 'Создать настройку сбора заявок'
      operationId: 8162c701863db10edb2951010a51d02e
      requestBody:
        description: 'Параметры для настройки'
        required: true
        content:
          application/json:
            schema:
              properties:
                type:
                  type: string
              type: object
      responses:
        '200':
          description: 'Тип настройка создана'
  '/api/admin/participations/${id}':
    delete:
      tags:
        - ADMIN
      summary: 'Удаление заявки'
      operationId: c59fd8cebecda6a8f4c23e55ec6ed094
      parameters:
        -
          name: id
          in: path
          description: 'ID Заявки'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Заявка удалена'
    patch:
      tags:
        - ADMIN
      summary: 'Изменение заявки на участие'
      operationId: 28b6d1ee56c9fcb9b71e4f110bd572fb
      parameters:
        -
          name: id
          in: path
          description: 'ID Заявки'
          required: true
          schema:
            type: integer
      requestBody:
        description: 'Параметры для обновления заявки'
        required: true
        content:
          application/json:
            schema:
              properties:
                priority:
                  type: integer
                state_id:
                  type: integer
                candidate_id:
                  type: integer
                project_id:
                  type: integer
              type: object
      responses:
        '200':
          description: 'Заявка изменена'
        '404':
          description: 'Заявка не найдена'
        '400':
          description: 'У кандидата уже есть заявка на этот проект'
  /api/admin/participations:
    get:
      tags:
        - ADMIN
      summary: 'Получить все заявки'
      operationId: 08cfd783e97365a1e9560a470fdc89f9
      responses:
        '200':
          description: 'Список всех заявок'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
    post:
      tags:
        - ADMIN
      summary: 'Создать заявку @TODO BODY'
      operationId: 16176789c58375bad7d2c751c15b2b38
      requestBody:
        description: 'Параметры для создания заявки'
        required: true
        content:
          application/json:
            schema:
              properties:
                priority:
                  type: integer
                state_id:
                  type: integer
                candidate_id:
                  type: integer
                project_id:
                  type: integer
              type: object
      responses:
        '200':
          description: 'Заявка создана'
        '400':
          description: 'У кандидата уже есть заявка на этот проект'
  '/api/admin/participations/{id}':
    get:
      tags:
        - ADMIN
      summary: 'Получить заявку по ID'
      operationId: 61dd4b50183c78e715843e31789bb0ff
      parameters:
        -
          name: id
          in: path
          description: 'ID Заявки'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Заявка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participation'
  /api/admin/participations/updateOrCreate:
    post:
      tags:
        - ADMIN
      summary: 'Обновить или создать заявку если не существует'
      operationId: 95f823b04dd1215ee158a91261307a56
      requestBody:
        description: 'Параметры для создания-обновления заявки'
        required: true
        content:
          application/json:
            schema:
              properties:
                priority:
                  type: integer
                state_id:
                  type: integer
                candidate_id:
                  type: integer
                project_id:
                  type: integer
              type: object
      responses:
        '200':
          description: 'созданая-обновленная заявка'
  '/api/admin/projects/${id}':
    delete:
      tags:
        - ADMIN
      summary: 'Удаление проекта'
      operationId: 3e5ccd2e6e3d9bd429b36cae215713cf
      parameters:
        -
          name: id
          in: path
          description: 'ID проекта'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Проект удален'
        '404':
          description: 'Проект не найден'
    patch:
      tags:
        - ADMIN
      summary: 'Обновить проект'
      operationId: e2c4a11d12a4215787f8f46b11c805d8
      parameters:
        -
          name: id
          in: path
          description: 'ID проекта'
          required: true
          schema:
            type: integer
      requestBody:
        description: 'Параметры для обновления проекта'
        required: true
        content:
          application/json:
            schema:
              properties:
                title:
                  type: string
                places:
                  type: integer
                goal:
                  type: string
                description:
                  type: string
                difficulty:
                  type: integer
                date_start:
                  type: string
                date_end:
                  type: string
                requirements:
                  type: string
                customer:
                  type: string
                product_result:
                  type: string
                study_result:
                  type: string
                additional_inf:
                  type: string
                state_id:
                  type: integer
                type_id:
                  type: integer
                department_id:
                  type: integer
                supervisor_ids:
                  type: array
                  items: { type: integer }
                skill_ids:
                  type: array
                  items: { type: integer }
                speciality_ids:
                  type: array
                  items: { type: integer }
              type: object
      responses:
        '200':
          description: 'Проект изменен'
        '404':
          description: 'Проект не найден'
  /api/admin/projects/:
    get:
      tags:
        - ADMIN
      summary: 'Получить информацию о всех проектах'
      operationId: 61aaffa080da129d88459601deafa221
      responses:
        '200':
          description: 'Все проекты'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
  /api/admin/projects:
    post:
      tags:
        - ADMIN
      summary: 'Создать проект'
      operationId: 111fb580612eb7b269c09a8bc49db764
      requestBody:
        description: 'Параметры для создания проекта'
        required: true
        content:
          application/json:
            schema:
              properties:
                title:
                  type: string
                places:
                  type: integer
                goal:
                  type: string
                description:
                  type: string
                difficulty:
                  type: integer
                date_start:
                  type: string
                  format: date
                date_end:
                  type: string
                  format: date
                requirements:
                  type: string
                customer:
                  type: string
                product_result:
                  type: string
                study_result:
                  type: string
                additional_inf:
                  type: string
                state_id:
                  type: integer
                type_id:
                  type: integer
                department_id:
                  type: integer
                supervisor_ids:
                  type: array
                  items: { type: integer }
                skill_ids:
                  type: array
                  items: { type: integer }
                speciality_ids:
                  type: array
                  items: { type: integer }
              type: object
      responses:
        '200':
          description: 'Проект создан'
  '/api/admin/${id}':
    delete:
      tags:
        - ADMIN
      summary: 'Удаление категории навыков'
      operationId: 825ecff95822915cb9f5ae85c8a06b10
      parameters:
        -
          name: id
          in: path
          description: 'ID категории навыков'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'категория навыков удалена'
  /api/admin/skillCatigory:
    get:
      tags:
        - ADMIN
      summary: 'Получить информацию  о всех категориях навыков'
      operationId: 63920770b63cf4bf99b0279e9e453eab
      responses:
        '200':
          description: 'Информация о всех категориях навыков'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SkillCategory'
  '/api/admin/skillCategory/{id}':
    get:
      tags:
        - ADMIN
      summary: 'Получение информации о категории навыков по ID'
      operationId: eda60c18a001ef09620e5a85ac7657ec
      parameters:
        -
          name: id
          in: path
          description: 'ID категории навыков'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Категория навыков'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillCategory'
        '404':
          description: 'Категория навыков не найдена'
  /api/admin/skillCategory:
    post:
      tags:
        - ADMIN
      summary: 'Создать категорию навыков'
      operationId: f472023b22e4a380f5b4b2c85a31256a
      requestBody:
        description: 'Параметры для обновления категории навыка'
        required: true
        content:
          aplication\json:
            schema:
              properties:
                name:
                  type: string
              type: object
      responses:
        '200':
          description: 'категория навыков создана'
  '/api/admin/skillCategory/${id}':
    patch:
      tags:
        - ADMIN
      summary: 'Обновить категорию навыков'
      operationId: f44f4da324207f8df281d4c6fe99ce11
      parameters:
        -
          name: id
          in: path
          description: 'ID категория навыков'
          required: true
          schema:
            type: integer
      requestBody:
        description: 'Параметры для обновления категории навыка'
        required: true
        content:
          aplication\json:
            schema:
              properties:
                name:
                  type: string
              type: object
      responses:
        '200':
          description: 'категория навыков изменена'
  /api/admin/skills/:
    get:
      tags:
        - ADMIN
      summary: 'Получить все навыки'
      operationId: d4a1461efecf630f9159deda7408e2e1
      responses:
        '200':
          description: Навыки
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
  '/api/admin/supervisors/${id}':
    delete:
      tags:
        - ADMIN
      summary: 'Удалить преподавателя'
      operationId: 80394ebee6acccdced5d5b9557058252
      parameters:
        -
          name: id
          in: path
          description: 'ID преподавателя'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Преподаватель удален'
        '404':
          description: 'Преподаватель не найден'
  /api/admin/supervisors:
    post:
      tags:
        - ADMIN
      summary: 'Создать преподавателя'
      operationId: 5e04dd6c28e7e27544abc31005d977c8
      requestBody:
        description: 'Параметры для создания руководителя проекта'
        required: true
        content:
          application/json:
            schema:
              properties:
                fio:
                  type: string
                email:
                  type: string
                about:
                  type: string
                position:
                  type: string
                department_id:
                  type: integer
              type: object
      responses:
        '200':
          description: 'Преподаватель создан'
  '/api/admin/supervisors/{id}':
    patch:
      tags:
        - ADMIN
      summary: 'Обновить состояние проекта'
      operationId: 1ab32dcae664fdd506852d7164d961c2
      parameters:
        -
          name: id
          in: path
          description: 'ID преподавателя @TODO BODY'
          required: true
          schema:
            type: integer
      requestBody:
        description: 'Параметры для обновления руководителя проекта'
        required: true
        content:
          application/json:
            schema:
              properties:
                fio:
                  type: string
                email:
                  type: string
                about:
                  type: string
                position:
                  type: string
                department_id:
                  type: integer
              type: object
      responses:
        '200':
          description: 'Преподаватель изменен'
        '404':
          description: 'Преподаватель не найден'
  '/api/admin/types/${id}':
    delete:
      tags:
        - ADMIN
      summary: 'Удалить тип проекта'
      operationId: ac4c955ae2fa550c7e3df8bfaea48f18
      parameters:
        -
          name: id
          in: path
          description: 'ID типа проекта'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Тип проекта удален'
        '404':
          description: 'Тип проекта не найден'
    patch:
      tags:
        - ADMIN
      summary: 'Обновить тип проекта'
      operationId: ddc84a394082d962b2d340fb2913c855
      parameters:
        -
          name: id
          in: path
          description: 'ID типа проекта'
          required: true
          schema:
            type: integer
      requestBody:
        description: 'Параметры для обновления типа проекта'
        required: true
        content:
          application/json:
            schema:
              properties:
                type:
                  type: string
              type: object
      responses:
        '200':
          description: 'Тип проекта изменен'
        '404':
          description: 'Тип проекта не найден'
  /api/admin/types:
    post:
      tags:
        - ADMIN
      summary: 'Создать тип проекта'
      operationId: c939d2a21adb706922ffabca2284bbfa
      requestBody:
        description: 'Параметры для создания типа проекта'
        required: true
        content:
          application/json:
            schema:
              properties:
                type:
                  type: string
              type: object
      responses:
        '200':
          description: 'Тип проекта создан'
  /campus_auth:
    get:
      tags:
        - Auth
      summary: 'Авторизация через кампус'
      operationId: 9d55367cf81c991ca0964d5d8f0dd060
      responses:
        '200':
          description: 'Пользователь авторизован'
  /campus_out:
    get:
      tags:
        - Auth
      summary: 'Выход из аккаунта'
      operationId: a12c2317fbb07a89c3eef2cde10f4dfd
      responses:
        '200':
          description: 'Пользователь вышел из аккаунта'
  /api/activeProjects:
    get:
      tags:
        - 'CABINET CANDIDATE'
      summary: 'Получение активного проекта студента'
      operationId: 5c6ce16973c116e96df51a5786384197
      responses:
        '200':
          description: 'Активный проект студента'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  /api/arhiveProjects:
    get:
      tags:
        - 'CABINET CANDIDATE'
      summary: 'Получение архивных проектов студента'
      operationId: 22302cc4c33d8ea1f2f8222c5823a2c8
      responses:
        '200':
          description: 'Архивные проекты студента'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
  '/api/participations/${id}':
    post:
      tags:
        - 'CABINET CANDIDATE'
      summary: 'Создание заявки на проект'
      operationId: 301a772e316b0ba3f6c6f0c6f5916c7b
      parameters:
        -
          name: id
          in: path
          description: 'ID проекта'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Заявка создана'
        '404':
          description: 'Не найдено'
        '403':
          description: 'Сообщение об ошибке'
    delete:
      tags:
        - 'CABINET CANDIDATE'
      summary: 'Удаление заявки у авторизованного студента'
      operationId: 6700919707cec7e6144a07d3c23a342e
      parameters:
        -
          name: id
          in: path
          description: 'ID Заявки'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Заявка удалена'
        '403':
          description: 'Вы не можете удалить чужую заявку'
    patch:
      tags:
        - 'CABINET CANDIDATE'
      summary: 'Изменение приоритета заявки у авторизованного студента'
      operationId: f8565721843057e358bbc347e64c2eda
      parameters:
        -
          name: id
          in: path
          description: 'ID Заявки'
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              properties:
                priority:
                  type: integer
              type: object
      responses:
        '200':
          description: 'Заявка изменена'
        '403':
          description: 'Вы не можете изменить чужую заявку'
  /api/candidates:
    get:
      tags:
        - Candidate
      summary: 'Получить информацию о всех студентах'
      operationId: 86a41d1e246bd2e10a64300d56eb578a
      responses:
        '200':
          description: 'Информация о всех студентах'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Candidate'
  /api/candidate:
    get:
      tags:
        - 'CABINET CANDIDATE'
      summary: 'Получить информацию об авторизованном студенте'
      operationId: 2480a493492a84a70c52416430a1d362
      responses:
        '200':
          description: 'Информация о студенте'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidate'
    patch:
      tags:
        - 'CABINET CANDIDATE'
      summary: 'Обновить номер телефона, о себе, скиллы студента @TODO BODY'
      operationId: 62e625e76ccfb850709080de3a20f139
      requestBody:
        content:
          application/json:
            schema:
              properties:
                'skill_ids[]':
                  type: array
                  items: { type: integer }
                about:
                  type: string
                phone:
                  type: string
              type: object
      responses:
        '200':
          description: 'Информация о студенте Обновлена'
  /api/participations:
    get:
      tags:
        - 'CABINET CANDIDATE'
      summary: 'Получение заявок студента'
      operationId: b3b6a65927c7c35ddf4bec2dd1aa3bc9
      responses:
        '200':
          description: 'Информация о заявках студента'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participation'
  '/api/candidates/{id}':
    get:
      tags:
        - Candidate
      summary: 'Получить информацию о студенте по ID'
      operationId: 24960ff0fb77086529a54ad57a10816c
      parameters:
        -
          name: id
          in: path
          description: 'ID студента'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Информация о студенте'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Candidate'
        '404':
          description: 'Информация о студенте не найдена'
  /api/candidate/skills:
    get:
      tags:
        - 'CABINET CANDIDATE'
      summary: 'Получение навыков авторизованного студента'
      operationId: 386620a303432a949055b472a169a0ac
      responses:
        '200':
          description: 'Получение навыков студента'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
  /api/departments/:
    get:
      tags:
        - Department
      summary: 'Получить информацию о кафедрах'
      operationId: c8679101c993fe33d9bb9529337cde72
      responses:
        '200':
          description: Кафедры
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Department'
  '/api/departments/{id}':
    get:
      tags:
        - Department
      summary: 'Получение информации о кафедре по ID'
      operationId: 7b1a6f42990c7116b01f93686d554711
      parameters:
        -
          name: id
          in: path
          description: 'ID кафедры'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: кафедра
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
        '404':
          description: 'настройка не найдена'
  /api/harvestSettings/active:
    get:
      tags:
        - ADMIN
      summary: 'Получение информации о активной настройке'
      operationId: 089d44b0bb97d0c72d7da0b023952526
      responses:
        '200':
          description: настрока
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HarvestSetting'
        '404':
          description: 'настройка не найдена'
  /api/harvestSettings/:
    get:
      tags:
        - Harvest
      summary: 'Получить информацию о всех настройках'
      operationId: c031886ca5e0749bfd72f69aa8f5b66b
      responses:
        '200':
          description: 'Все настройки'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HarvestSetting'
  '/api/harvestSettings/{id}':
    get:
      tags:
        - Harvest
      summary: 'Получение информации о настройке по ID'
      operationId: 88f0d7cd21cfafd4a04151054ba1f320
      parameters:
        -
          name: id
          in: path
          description: 'ID настройки'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: настрока
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HarvestSetting'
        '404':
          description: 'настройка не найдена'
  '/api/institutes/getBySpecialityName/{specialityName}':
    get:
      tags:
        - Institute
      summary: 'Получить институт по названию специльности'
      operationId: ac5b11386e1f29242c21942a1f51c926
      parameters:
        -
          name: specialityName
          in: path
          description: 'Название специльности'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Информация об институте'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institute'
        '404':
          description: 'Не найдено'
  /api/institutes:
    get:
      tags:
        - Institute
      summary: 'Получить институты'
      operationId: ee9911bd3fae617cfbb1b2db973d1082
      responses:
        '200':
          description: 'Все институты'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Institute'
  '/api/institutes/isInSameInstitute/{specialityName1}/{specialityName2}':
    get:
      tags:
        - Institute
      summary: 'Проверка находятся ли две специальности в одном институте'
      operationId: 401f1d077801d48956d7c3605d4fc280
      parameters:
        -
          name: specialityName1
          in: path
          description: 'Название первой специльности'
          required: true
          schema:
            type: string
        -
          name: specialityName2
          in: path
          description: 'Название второй специльности'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'находятся ли две специальности в одном институте'
          content:
            application/json:
              schema:
                properties:
                  isSame: { type: boolean }
                type: object
        '404':
          description: 'Не найдено'
  '/api/institutes/{id}':
    get:
      tags:
        - Institute
      summary: 'Получить информацию об институте по ID'
      operationId: ca24ce3c8648cce7c7032093eb1afe54
      parameters:
        -
          name: id
          in: path
          description: 'ID института'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Информация об институте'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institute'
  /api/kampus:
    get:
      tags:
        - KAMPUS
      summary: 'Данные для кампуса'
      operationId: c3cf50ca5694f90f15978476d7ddd41d
      responses:
        '200':
          description: '7 проектов на странице + навигация'
          content:
            application/json:
              schema:
                properties:
                  projectCount: { description: 'Общее количество проектов', type: integer }
                  data: { description: 'Массив проектов', type: array, items: { $ref: '#/components/schemas/Project' } }
                type: object
  /api/participationsDeadline:
    get:
      tags:
        - Participation
      summary: 'Получение дедлайна подачи заявки'
      operationId: 9abe53584b0d0b085e984c7f5168ce95
      responses:
        '200':
          description: 'Дата дедлайна'
          content:
            text/plaint:
              schema:
                type: string
        '404':
          description: 'Дедлайн не назначен'
  /api/participations/filter:
    get:
      tags:
        - Participation
      summary: 'Получение заявок с фильтрацией'
      operationId: 3997bdafe69f12ab5c6e00c9a58bcea5
      parameters:
        -
          name: page
          in: query
          description: 'Номер страницы (отчет с нуля)'
          required: false
          schema:
            type: integer
        -
          name: state
          in: query
          description: 'Массив ID состояний'
          required: false
          schema:
            type: array
            items:
              type: integer
        -
          name: pageSize
          in: query
          description: "Размер страницы. Позитивное число ИЛИ 'max' для получения без пагинации"
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Заявки
          content:
            application/json:
              schema:
                properties:
                  participationCount: { description: 'Общее количество проектов', type: integer }
                  data: { description: 'Массив заявок', type: array, items: { $ref: '#/components/schemas/Participation' } }
                type: object
  /api/projectSupervisorRoles/:
    get:
      tags:
        - ProjectSupervisorRole
      summary: 'Получить роли преподавателей на проекте'
      operationId: 20453841aa140693af7a8829e3a797da
      responses:
        '200':
          description: 'Роли преподавателей на проекте'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectSupervisorRole'
  /api/projects/filter:
    get:
      tags:
        - Project
      summary: 'Получить проекты с фильтрацией'
      operationId: 3172f11dfe97cf7f45f02c67fdfc86e5
      parameters:
        -
          name: page
          in: query
          description: 'Номер страницы (отчет с нуля)'
          required: false
          schema:
            type: integer
        -
          name: skills
          in: query
          description: 'Массив ID скилов'
          required: false
          schema:
            type: array
            items:
              type: integer
        -
          name: specialties
          in: query
          description: 'Массив ID специальностей'
          required: false
          schema:
            type: array
            items:
              type: integer
        -
          name: type
          in: query
          description: 'Массив ID типов проекта'
          required: false
          schema:
            type: array
            items:
              type: integer
        -
          name: state
          in: query
          description: 'Массив ID состояний проекта'
          required: false
          schema:
            type: array
            items:
              type: integer
        -
          name: supervisor
          in: query
          description: 'Массив ID руководителей'
          required: false
          schema:
            type: array
            items:
              type: integer
        -
          name: difficulty
          in: query
          description: 'Массив с сложностями'
          required: false
          schema:
            type: array
            items:
              type: integer
        -
          name: order
          in: query
          description: 'Порядок сортировки (возрастающий - asc, убывающий - desc)'
          required: false
          schema:
            type: string
        -
          name: sortBy
          in: query
          description: 'По какому полю сортировать'
          required: false
          schema:
            type: string
        -
          name: pageSize
          in: query
          description: "Размер страницы. Позитивное число ИЛИ 'max' для получения без пагинации"
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: '7 проектов на странице + навигация'
          content:
            application/json:
              schema:
                properties:
                  projectCount: { description: 'Общее количество проектов', type: integer }
                  data: { description: 'Массив проектов', type: array, items: { $ref: '#/components/schemas/Project' } }
                type: object
  '/api/projects/{id}/participants':
    get:
      tags:
        - Project
      summary: 'Получение участников на проекте'
      operationId: 126b02f893ec810bc0b91bb3a8795010
      parameters:
        -
          name: id
          in: path
          description: 'ID проекта'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Участники проекта'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Candidate'
        '404':
          description: 'Проект не найден'
  '/api/projects/{id}/history':
    get:
      tags:
        - Project
      summary: 'История проекта'
      operationId: 0285645f89ee33a5a8eea0c16e8bd35d
      parameters:
        -
          name: id
          in: path
          description: 'ID проекта'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: проекты
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
        '404':
          description: 'Проект не найден'
  '/api/projects/{id}':
    get:
      tags:
        - Project
      summary: 'Получение информации о проекте по ID'
      operationId: 30d477cc11e01c46fe7c71d21d0f3eb1
      parameters:
        -
          name: id
          in: path
          description: 'ID проекта'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Информация о проекте @TODO Понять какую информацию отдавать если проект активный архивный и т.д.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: 'Проект не найден'
  '/api/skills/${id}':
    delete:
      tags:
        - UNUSED
      summary: 'Удаление навыка'
      operationId: af4a3c6b9f08ba6b062eff0bd52754f6
      parameters:
        -
          name: id
          in: path
          description: 'ID навыка'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'навык удален'
    patch:
      tags:
        - UNUSED
      summary: 'Обновить навык'
      operationId: f17422f07c1c7c953d6af136f3bafbbb
      parameters:
        -
          name: id
          in: path
          description: 'ID навыка @TODO BODY'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'навык изменен'
  /api/skills/:
    get:
      tags:
        - Skill
      summary: 'Получить данные для фильтрации по навыкам и специальностям. Скрывать данные других институтов если пользователь авторизован'
      operationId: 4cdbc410153f11ae6a10002715d9fd6c
      responses:
        '200':
          description: 'Навыки, специальности, категории скилов'
          content:
            application/json:
              schema:
                properties:
                  skills: { description: 'Все навыки', type: array, items: { $ref: '#/components/schemas/Skill' } }
                  specialities: { description: 'Специальности. Если пользователь авторизован, то показываются специальности только его института', type: array, items: { $ref: '#/components/schemas/Skill' } }
                  skillCategories: { description: 'Категории скилов', type: array, items: { $ref: '#/components/schemas/Skill' } }
                type: object
  '/api/skills/{id}':
    get:
      tags:
        - Skill
      summary: 'Получение информации о навыке по ID'
      operationId: 2b7359be165c54b3fff865ef54f4f8f0
      parameters:
        -
          name: id
          in: path
          description: 'ID навыка'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Навык
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Skill'
        '404':
          description: 'Навык не найден'
  /api/skills:
    post:
      tags:
        - UNUSED
      summary: 'Создать навык @TODO BODY'
      operationId: 85bc1be1de5dcf301af49f152469ef9a
      responses:
        '200':
          description: 'навык создан'
  /api/specialities/:
    get:
      tags:
        - Speciality
      summary: 'Получить все специальности'
      operationId: f8872c0089b7f135eef8baed8dd23bd1
      responses:
        '200':
          description: 'все специальности'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Speciality'
  /api/states/:
    get:
      tags:
        - ProjectState
      summary: 'Получить все состояния проекта'
      operationId: 4381924b418372a1ebbf493a65453e11
      responses:
        '200':
          description: 'Cостояния проектов'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectState'
  '/api/states/{id}':
    get:
      tags:
        - ProjectState
      summary: 'Получение состояния проекта по ID'
      operationId: 61e81f5821617080c2640403de3670c4
      parameters:
        -
          name: id
          in: path
          description: 'ID состояния проекта'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Состояние проекта'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectState'
        '404':
          description: 'Состояние проекта не найдено'
  /api/director/projects:
    get:
      tags:
        - 'CABINET DIRECTOR'
      summary: 'Получить проекты на рассмотрении'
      operationId: e0d7192587977ca512485431d882cf37
      responses:
        '200':
          description: 'Информации о проектах'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
  'api/director/projects/${id}':
    patch:
      tags:
        - 'CABINET DIRECTOR'
      summary: 'Отклонить или принять проект'
      operationId: 9fb74356bc46603bf9cb741d68d1cdb7
      parameters:
        -
          name: id
          in: path
          description: 'ID проекта'
          required: true
          schema:
            type: integer
      requestBody:
        description: 'Параметры для обновления проекта'
        required: true
        content:
          application/json:
            schema:
              properties:
                rejection_reason:
                  description: 'Можно прислать null'
                  type: string
                rejection_date:
                  description: 'Можно прислать null'
                  type: string
                  format: date
                state_id:
                  description: 'Отлонена - 8. Принята - 9'
                  type: integer
              type: object
      responses:
        '200':
          description: 'Проект обновлен'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '403':
          description: 'В институте уже одобрено максимальное количество проектов'
  /api/supervisors/:
    get:
      tags:
        - Supervisor
      summary: 'Получить всех преподавателей'
      operationId: 14d9df40e38ee19ded9b467255d7fd3c
      responses:
        '200':
          description: 'все преподаватели'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supervisor'
  /api/supervisor:
    get:
      tags:
        - 'CABINET SUPERVISOR'
      summary: 'Получить информацию об авторизованном преподавателе'
      operationId: 02d99dd2ffecf8d16975df933612044e
      responses:
        '200':
          description: 'Информация о преподе'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supervisor'
  '/api/supervisor/projects/${id}':
    delete:
      tags:
        - 'CABINET SUPERVISOR'
      summary: 'Удалить заявку на создание проекта'
      operationId: 61af00954ad7be386a4bc6d6cd18512d
      parameters:
        -
          name: id
          in: path
          description: 'ID проекта'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Заявка удалена'
  /api/supervisor/projects:
    get:
      tags:
        - 'CABINET SUPERVISOR'
      summary: 'Получить проекты преподавателя'
      operationId: b9b4e803d821a67f81fb41d40c7dd9e6
      responses:
        '200':
          description: 'Информации о проектах'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
  api/supervisor/projects:
    post:
      tags:
        - 'CABINET SUPERVISOR'
      summary: 'Создать проект на рассмотрении (id=6) или черновик (id=7). Делает преподаватель'
      operationId: 0ab6943d65450a032e433e3874b5eb95
      requestBody:
        description: 'Параметры для создания проекта'
        required: true
        content:
          application/json:
            schema:
              properties:
                title:
                  type: string
                places:
                  type: integer
                goal:
                  type: string
                description:
                  type: string
                difficulty:
                  type: integer
                date_start:
                  type: string
                  format: date
                date_end:
                  type: string
                  format: date
                requirements:
                  type: string
                customer:
                  type: string
                product_result:
                  type: string
                study_result:
                  type: string
                additional_inf:
                  type: string
                type_id:
                  type: integer
                theme_source_id:
                  type: integer
                department_id:
                  type: integer
                prev_project_id:
                  type: integer
                state_id:
                  type: integer
                supervisors:
                  type: array
                  items: { properties: { supervisor_id: { type: integer }, role_ids: { type: array, items: { type: integer } } }, type: object }
                skill_ids:
                  type: array
                  items: { type: integer }
                new_skills:
                  type: array
                  items: { type: string }
                specialities:
                  type: array
                  items: { properties: { specialitiy_id: { type: integer }, course: { type: integer }, priority: { type: integer } }, type: object }
              type: object
      responses:
        '200':
          description: 'созданный проект'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  'api/supervisor/projects/${id}':
    patch:
      tags:
        - 'CABINET SUPERVISOR'
      summary: 'Обновить проект на рассмотрении. Делает преподаватель'
      operationId: d71434ad6cb348791d687d0435265b5b
      parameters:
        -
          name: id
          in: path
          description: 'ID проекта'
          required: true
          schema:
            type: integer
      requestBody:
        description: 'Параметры для обновления проекта'
        required: true
        content:
          application/json:
            schema:
              properties:
                title:
                  type: string
                places:
                  type: integer
                goal:
                  type: string
                description:
                  type: string
                difficulty:
                  type: integer
                date_start:
                  type: string
                  format: date
                date_end:
                  type: string
                  format: date
                requirements:
                  type: string
                customer:
                  type: string
                product_result:
                  type: string
                study_result:
                  type: string
                additional_inf:
                  type: string
                type_id:
                  type: integer
                department_id:
                  type: integer
                theme_source_id:
                  type: integer
                prev_project_id:
                  type: integer
                state_id:
                  type: integer
                supervisors:
                  type: array
                  items: { properties: { supervisor_id: { type: integer }, role_ids: { type: array, items: { type: integer } } }, type: object }
                skill_ids:
                  type: array
                  items: { type: integer }
                new_skills:
                  type: array
                  items: { type: string }
                specialities:
                  type: array
                  items: { properties: { specialitiy_id: { type: integer }, course: { type: integer }, priority: { type: integer } }, type: object }
              type: object
      responses:
        '200':
          description: 'Проект обновлен'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  /api/themeSources:
    get:
      tags:
        - 'Theme Sources'
      summary: 'Источники темы'
      operationId: 50666344a4a04f37fcc6408296057ac0
      responses:
        '200':
          description: 'Источники темы'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThemeSource'
  /api/types/:
    get:
      tags:
        - ProjectType
      summary: 'Получение всех типов проекта'
      operationId: 22d40a36b778600a73a54731e4079a70
      responses:
        '200':
          description: 'Типы проектов'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectType'
  '/api/types/{id}':
    get:
      tags:
        - ProjectType
      summary: 'Получение типа проекта по ID'
      operationId: d5abbc44236ab1e2376f29f847e0ab87
      parameters:
        -
          name: id
          in: path
          description: 'ID типа проекта'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Тип проекта'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectType'
        '404':
          description: 'Тип проекта не найден'
components:
  schemas:
    Candidate:
      properties:
        id:
          description: 'ID студента'
          type: integer
        fio:
          description: 'ФИО студента'
          type: string
        about:
          description: 'Информация о студенте'
          type: string
        email:
          description: Почта
          type: string
        numz:
          description: 'Номер зачетной книжки'
          type: string
        phone:
          description: Телефон
          type: string
        course:
          description: Курс
          type: integer
        training_group:
          description: 'Учебная группа'
          type: string
        speciality:
          $ref: '#/components/schemas/Speciality'
        canSendParticipations:
          description: 'Может ли отправлять заявки на проекты'
          type: boolean
      type: object
    Department:
      properties:
        id:
          description: 'ID Кафедры'
          type: integer
        name:
          description: 'Название кафедры'
          type: string
        institute:
          $ref: '#/components/schemas/Institute'
      type: object
    Group:
      properties:
        id:
          description: 'ID групппы'
          type: integer
        specialityCourse_id:
          description: 'ID специальности с курсом'
          type: integer
        name:
          description: 'ID название'
          type: string
      type: object
    HarvestBannedSpeciality:
      properties:
        id:
          description: 'ID специальности'
          type: integer
        course:
          description: 'Курс, если на задан, то все курсы не учавствуют'
          type: integer
        speciality:
          $ref: '#/components/schemas/Speciality'
      type: object
    HarvestSetting:
      properties:
        startDateParticipationHarvest:
          description: 'Дата начала приема заявок (2023-05-30)'
          type: string
        endDateParticipationHarvest:
          description: 'Дата окончания приема заявок (2023-05-30)'
          type: string
        bannedSpecialities:
          description: 'Специальности, которые не учавствуют в сборе заявок'
          type: array
          items:
            $ref: '#/components/schemas/HarvestBannedSpeciality'
      type: object
    Institute:
      properties:
        id:
          description: 'ID института'
          type: integer
        maxApprovedProjects:
          description: 'Максимальное кол-во одобренных проектов'
          type: integer
        name:
          description: 'Название института'
          type: string
      type: object
    Participation:
      properties:
        id:
          description: 'ID заявки'
          type: integer
        priority:
          description: 'Приоритет заявки'
          type: integer
        project_id:
          description: 'ID проекта, на которые подали заявку'
          type: string
        candidate_id:
          description: 'ID участника'
          type: string
        state:
          $ref: '#/components/schemas/ParticipationState'
        candidate:
          $ref: '#/components/schemas/Candidate'
        created_at:
          description: 'Дата создания записи в БД'
          type: string
        updated_at:
          description: 'Дата обновления записи в БД'
          type: string
      type: object
    Project:
      properties:
        id:
          description: 'ID проекта'
          type: integer
        prevProjectId:
          description: 'ID предшествующего проекта или null'
          type: integer
        title:
          description: 'Название проекта'
          type: string
        places:
          description: 'Количество мест на проекте'
          type: string
        goal:
          description: Цель
          type: string
        description:
          description: Описание
          type: string
        difficulty:
          description: Сложность
          type: integer
        date_start:
          description: 'Дата начала (2022-09-01)'
          type: string
        date_end:
          description: 'Дата окончания (2023-05-30)'
          type: string
        requirements:
          description: Требования
          type: string
        additional_inf:
          description: 'Дополнительная информация'
          type: string
        product_result:
          description: 'Продуктовынй результат'
          type: string
        study_result:
          description: 'Учебный результат'
          type: string
        rejection_reason:
          description: 'Причина отказа'
          type: string
        customer:
          description: Заказчик
          type: string
        supervisors:
          description: 'Руководители с ролями'
          type: array
          items:
            $ref: '#/components/schemas/ProjectSupervisor'
        participations:
          description: 'Заявки на проект'
          type: array
          items:
            $ref: '#/components/schemas/Participation'
        skills:
          description: 'Требуемые навыки'
          type: array
          items:
            $ref: '#/components/schemas/Skill'
        specialities:
          description: 'Для каких специальностей'
          type: array
          items:
            $ref: '#/components/schemas/Speciality'
        project_specialities:
          description: 'Для каких специальностей с приоритетом и курсом'
          type: array
          items:
            $ref: '#/components/schemas/ProjectSpeciality'
        supervisorsNames:
          description: 'Имена руководителей'
          type: string
        state:
          $ref: '#/components/schemas/ProjectState'
        department:
          $ref: '#/components/schemas/Department'
        type:
          $ref: '#/components/schemas/ProjectType'
        theme_source:
          $ref: '#/components/schemas/ThemeSource'
        created_at:
          description: 'Дата создания записи в БД'
          type: string
        updated_at:
          description: 'Дата обновления записи в БД'
          type: string
      type: object
    ProjectSpeciality:
      properties:
        id:
          description: ID
          type: integer
        course:
          description: 'Для какого курса. Если не задан, то для всех'
          type: integer
        priority:
          description: 'Приоритет специальности'
          type: integer
      type: object
    ProjectSupervisor:
      properties:
        id:
          description: ID
          type: integer
        roles:
          description: Роль
          type: array
          items:
            $ref: '#/components/schemas/ProjectSupervisorRole'
        supervisor:
          $ref: '#/components/schemas/Supervisor'
      type: object
    ProjectSupervisorRole:
      properties:
        id:
          description: ID
          type: integer
        name:
          description: Название
          type: integer
      type: object
    SkillCategory:
      properties:
        id:
          description: 'ID Категории скила'
          type: integer
        name:
          description: 'Название категории скила'
          type: string
      type: object
    Skill:
      properties:
        id:
          description: 'ID скила'
          type: integer
        name:
          description: 'Название скила'
          type: string
        skillCategory:
          $ref: '#/components/schemas/SkillCategory'
      type: object
    SpecialityCourse:
      properties:
        id:
          description: 'ID специальности с курсом'
          type: integer
        speciality_id:
          description: 'ID специальности'
          type: integer
        course:
          description: Курс
          type: integer
      type: object
    Speciality:
      properties:
        id:
          description: 'ID специальности'
          type: integer
        name:
          description: 'Название состояния'
          type: string
        institute:
          $ref: '#/components/schemas/Institute'
        department:
          $ref: '#/components/schemas/Department'
      type: object
    Supervisor:
      properties:
        id:
          description: 'ID Преподавателя'
          type: integer
        fio:
          description: ФИО
          type: string
        email:
          description: Почта
          type: string
        about:
          description: 'Информация о преподавателе'
          type: string
        position:
          description: Должность
          type: string
        department:
          $ref: '#/components/schemas/Department'
        created_at:
          description: 'Дата создания записи в БД'
          type: string
        updated_at:
          description: 'Дата обновления записи в БД'
          type: string
        canReviewProjects:
          description: 'Может ли делать ревью проектов'
          type: boolean
      type: object
    ThemeSource:
      properties:
        id:
          description: 'ID типа проекта'
          type: integer
        name:
          description: Название
          type: string
      type: object
    ProjectType:
      properties:
        id:
          description: 'ID типа проекта'
          type: integer
        type:
          description: 'Название типа проекта'
          type: string
      type: object
    ParticipationState:
      properties:
        id:
          description: ID
          type: integer
        state:
          description: 'Название состояния'
          type: string
      type: object
    ProjectState:
      properties:
        id:
          description: 'ID Состояния проекта'
          type: integer
        state:
          description: 'Название состояния'
          type: string
      type: object
